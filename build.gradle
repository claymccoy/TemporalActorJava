plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '12.1.8'
    id 'com.github.spotbugs' version '5.2.1'
    id 'pmd'
    id 'checkstyle'
}

group = 'com.claymccoy'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Temporal
    implementation 'io.temporal:temporal-sdk:1.27.0'

    // Utilities
    implementation 'com.google.guava:guava:32.1.3-jre'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.temporal:temporal-testing:1.27.0'
}

// Checkstyle configuration
checkstyle {
    configFile = file('checkstyle.xml')
    toolVersion = '10.3.3'
    ignoreFailures = true  // Don't fail build on violations for now
}

// PMD configuration
pmd {
    ruleSetFiles = files('pmd-rules.xml')
    toolVersion = '6.55.0'
    ignoreFailures = true  // Don't fail build on PMD violations for now
}

// SpotBugs configuration
spotbugs {
    excludeFilter = file('spotbugs-exclude.xml')
    toolVersion = '4.7.3'
    ignoreFailures = true  // Don't fail build on violations for now
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

// OWASP dependency check configuration
dependencyCheck {
    formats = ['HTML', 'JSON']
    suppressionFile = 'suppressions.xml'
    failBuildOnCVSS = 7.0
}

// Task to generate coverage verification
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}

// Custom task for CI builds
task ciBuild {
    dependsOn 'clean', 'test', 'jacocoTestReport', 'build'
    description 'Complete CI build with tests and coverage'
}
